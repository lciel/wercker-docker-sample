box: wercker-labs/docker
build:
  steps:
    - script:
        name: Load image caches
        code: |
          hostname
          df -h
          ls -R $WERCKER_CACHE_DIR
          echo $WERCKER_CACHE_DIR
          if [ -e $WERCKER_CACHE_DIR/images/base.tar.gz ]; then gzip -dc $WERCKER_CACHE_DIR/base.tar.gz | sudo docker load; fi
          if [ -e $WERCKER_CACHE_DIR/webapp.tar.gz ]; then gzip -dc $WERCKER_CACHE_DIR/webapp.tar.gz | sudo docker load; fi
    - script:
        name: Build base image
        code: |
          sudo docker build -t 127.0.0.1:49000/lciel/base ./base
    - script:
        name: Build webapp image
        code: |
          sudo docker build -t 127.0.0.1:49000/lciel/webapp ./webapp
    - script:
        name: List images
        code: |
          sudo docker images
    - script:
        name: Save image caches
        code: |
          sudo docker save 127.0.0.1:49000/lciel/base | gzip -c > $WERCKER_CACHE_DIR/base.tar.gz
          sudo docker save 127.0.0.1:49000/lciel/webapp | gzip -c > $WERCKER_CACHE_DIR/webapp.tar.gz
          ls -lh $WERCKER_CACHE_DIR
    - script:
        name: Run rspec
        code: |
          sudo docker run --rm -e RAILS_ENV=test 127.0.0.1:49000/lciel/webapp:latest bash -c "cd /app && bundle exec rspec"

deploy:
  steps:

    - install-packages:
        packages: unzip

    - script:
        name: Install Beanstalk CLI
        code: |
          wget --quiet https://s3.amazonaws.com/elasticbeanstalk/cli/AWS-ElasticBeanstalk-CLI-2.4.0.zip
          unzip -qq AWS-ElasticBeanstalk-CLI-2.4.0.zip
          sudo mkdir -p /usr/local/aws/elasticbeanstalk
          sudo mv AWS-ElasticBeanstalk-CLI-2.4.0/* /usr/local/aws/elasticbeanstalk/
          export PATH="/usr/local/aws/elasticbeanstalk/eb/linux/python2.7:$PATH"
          export AWS_CREDENTIAL_FILE="${HOME}/.elasticbeanstalk/aws_credential_file"
          mkdir -p "${HOME}/.elasticbeanstalk/"
          mkdir -p "${WERCKER_SOURCE_DIR}/.elasticbeanstalk/"

    - create-file:
        name: Create AWS credentials
        filename: $AWS_CREDENTIAL_FILE
        content: |
          AWSAccessKeyId=$AWS_ACCESS_KEY_ID
          AWSSecretKey=$AWS_SECRET_KEY

    - create-file:
        name: Create EB config
        filename: $WERCKER_SOURCE_DIR/.elasticbeanstalk/config
        content: |
          [global]
          ApplicationName=wercker-docker-sample
          DevToolsEndpoint=git.elasticbeanstalk.ap-northeast-1.amazonaws.com
          EnvironmentName=$EB_ENVIRONMENT
          Region=ap-northeast-1
          ServiceEndpoint=https://elasticbeanstalk.ap-northeast-1.amazonaws.com
          AwsCredentialFile=$AWS_CREDENTIAL_FILE/.elasticbeanstalk/aws_credential_file

    - script:
        name: EB status
        code: eb status

    - script:
        name: Create deploy repository
        code: |
          git config --global user.email "lcently@gmail.com"
          git config --global user.name "wercker"

          rm -rf $WERCKER_SOURCE_DIR/.git
          echo ".elasticbeanstalk/" > .gitignore
          git init
          git add .
          git commit -m "deploy commit"
          sudo bash /usr/local/aws/elasticbeanstalk/AWSDevTools/Linux/AWSDevTools-RepositorySetup.sh

    - script:
        name: Push to AWS
        code: |
          git checkout master
          git aws.push

